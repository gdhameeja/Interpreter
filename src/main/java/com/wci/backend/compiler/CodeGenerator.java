package com.wci.backend.compiler;

import com.wci.intermediate.*;
import com.wci.backend.*;
import com.wci.message.*;

import static com.wci.message.MessageType.COMPILER_SUMMARY;

public class CodeGenerator extends Backend{
    
  /**
   * Process the intermediate code and the symbol table generated by the parser
   * to generate the machine language instructions.
   * @param iCode the intermediate code.
   * @param symTab the symbol table.
   * @throws Exception if an error occurred.
   */
    public void process(ICode iCode, SymTab symTab){
	long startTime = System.currentTimeMillis();
        float elapsedTime = (System.currentTimeMillis() - startTime)/1000f;
	int instructionCount = 0;

	// Send the compiler summary message.
	sendMessage(new Message(COMPILER_SUMMARY, new Number[] {instructionCount, elapsedTime}));
    }
}
